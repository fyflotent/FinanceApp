{
	"info": {
		"_postman_id": "fd8ebdf7-295f-4439-9e57-c19ae3da33be",
		"name": "FinanceAppTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Stored Stocks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Tesla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the stock\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"Got TSLA\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stock\": \"TSLA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Bad Stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the stock\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"Error setting stock\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stock\": \"OOOF\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Stored Stocks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"TSLA\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Apple",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the stock\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"Got AAPL\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stock\": \"AAPL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Stock Averages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the stock\", () => {\r",
							"  const json = pm.response.json()\r",
							"  pm.expect(Object.keys(json)).to.contain(\"AAPL\", \"TSLA\")\r",
							"  pm.expect(typeof json[\"AAPL\"] === \"number\").to.eql(true)\r",
							"  pm.expect(typeof json[\"TSLA\"] === \"number\").to.eql(true)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"stock\": \"TSLA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks/info/averages",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks",
						"info",
						"averages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Tesla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the deletion\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"Deleted TSLA\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks/TSLA",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks",
						"TSLA"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Apple",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is returned acknowledging the deletion\", () => {\r",
							"  pm.expect(pm.response.text()).to.eql(\"Deleted AAPL\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/stocks/AAPL",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"stocks",
						"AAPL"
					]
				}
			},
			"response": []
		}
	]
}